// L1.10
// Группировка температур
// Дана последовательность температурных колебаний:
// -25.4, -27.0, 13.0, 19.0, 15.5, 24.5, -21.0, 32.5.

// Объединить эти значения в группы с шагом 10 градусов.

// Пример: -20:{-25.4, -27.0, -21.0}, 10:{13.0, 19.0, 15.5}, 20:{24.5}, 30:{32.5}.

// Пояснение:
// диапазон -20 включает значения от -20 до -29.9,
// диапазон 10 - от 10 до 19.9, и т.д.

// Порядок в подмножествах не важен.

// Дедлайн — 1 нояб, 02:59

// Решение

package main

import (
	"fmt"
	"strconv"
)

var step uint8 = 10

var mas = [...]float32{-25.4, -27.0, 13.0, 19.0, 15.5, 24.5, -21.0, 32.5, -0.5, -6.1, 1.7, 3, 9.2, 0, -0}

func main() {

	m := make(map[string][]float32)

	fmt.Printf("\nПервоначальный массив температур:\n%+v\n", mas)

	for _, value := range mas {

		var key string // пришлось делать вместо int тип string поскольку значения от -10 до +10 при int кладутся в диапазон 20 вместо 10 по условию
		// кроме того, если шаг изменится на дробный, придётся вводить допустимое отклонение Epsilon, например = 1e-7, в пределах которого величина будет достигнута

		if value >= 0 && value < float32(step) {
			key = "+0"
		} else if value < 0 && value > -float32(step) {
			key = "-0"
		} else {
			temp := int(value) / int(step)
			temp *= 10
			key = strconv.Itoa(temp)
		}

		m[key] = append(m[key], value)
	}

	fmt.Printf("\nОбъединённые значения в группы с шагом 10 градусов:\n%+v\n", m)

}
